input {
  stdin {
    type => "mac"
  }

  file {
    type => "apache"
    start_position => "beginning"
    path => [ "/var/log/apache2/access.log" ]
    exclude => "*.gz"
  }

  file {
    type => "syslog"
    start_position => "beginning"

    # Wildcards work, here :)
    path => [ "/var/log/auth*", "/var/log/syslog*", "/var/log/mail*" ]
    exclude => "*.gz"
  }
}

filter {
  grok {
    type => "apache"
    # See the following URL for a complete list of named patterns
    # logstash/grok ships with by default:
    # https://github.com/logstash/logstash/tree/master/patterns
    #
    # The grok filter will use the below pattern and on successful match use
    # any captured values as new fields in the event.
    pattern => "%{COMBINEDAPACHELOG}"
  }

  date {
    type => "apache"
    # Try to pull the timestamp from the 'timestamp' field (parsed above with
    # grok). The apache time format looks like: "18/Aug/2011:05:44:34 -0700"
    timestamp => "dd/MMM/yyyy:HH:mm:ss Z"
  }

  grok {
    type => "syslog"
    pattern => "%{SYSLOGTIMESTAMP:timestamp}"
  }

  date {
    type => "syslog"
    match => [ "timestamp", "MMM dd HH:mm:ss", "MMM dd YYY HH:mm:ss", "MMM  d YYY HH:mm:ss", "ISO8601" ]
  }
}

output {
  stdout { }
  elasticsearch { 
    embedded => true 
  }
}
